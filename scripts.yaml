

#mixer
    mixdone:
        sequence:
          - service: script.turn_on
            data_template:
              entity_id: >
                {% if is_state('media_player.all', 'off') %}
                  script.mixdone_tss
                {% else %}
                  script.mixdone_notts
                {% endif %}

#mixdone
    mixdone_notts:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #brighten lights
              brightness: 254
          - service: script.turn_on
            data:
              entity_id: script.vattenkokare_on

#mixdone_tss
    mixdone_tss:   
#    coffeedone: 
        sequence:
          - service: light.turn_off
            data:
              entity_id: light.kaffe
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #dim lights
              brightness: 127
          - delay: 00:00:01
          - service: media_player.turn_on
            data:
              entity_id: media_player.kitchen
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.kitchen
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say amazon_polly_say voicerss
            data_template:
              entity_id: media_player.kitchen
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["No more spinning"
               ] | random}} ...
               {% elif now().strftime("%H")|int < 18 %}
               {{["Ok mixing done"
               ] | random}} ...
               {% elif now().strftime("%H")|int < 07 %}
               {{["Ok then"
               ] | random}} ...
               {% else %}
               {{["Ok then"
               ] | random}} ...
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

#mixer
    mixer:
        sequence:
          - service: script.turn_on
            data_template:
              entity_id: >
                {% if is_state('media_player.all', 'off') %}
                  script.mixer_tss
                {% else %}
                  script.mixer_notts
                {% endif %}

#mixer_tss
    mixer_tss:
#    coffeemaker:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #brighten lights
              brightness: 254
          - service: script.turn_on
            data:
              entity_id: script.vattenkokare_on
          - delay: 00:00:01
          - service: media_player.turn_on
            data:
              entity_id: media_player.kitchen
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.kitchen
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.kitchen
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Start mixing."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 18 %}
               {{["Lets start spinning"
               ] | random}} ...
               {% elif now().strftime("%H")|int < 07 %}
               {{["Ok i hear you"] | random}} ...               
               {% else %}
               {{["Ok i hear you"] | random}} ...   
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

#mixer_notts
    mixer_notts:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #brighten lights
              brightness: 254
          - service: script.turn_on
            data:
              entity_id: script.vattenkokare_on

#coffeemaker
    teamaker:
        sequence:
          - service: script.turn_on
            data_template:
              entity_id: >
                {% if is_state('media_player.all', 'off') %}
                  script.coffeemaker_tss
                {% else %}
                  script.coffeemaker_notts
                {% endif %}

#teamaker
    teamaker_tss:
#    coffeemaker:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #brighten lights
              brightness: 254
          - service: script.turn_on
            data:
              entity_id: script.vattenkokare_on
          - delay: 00:00:01
          - service: media_player.turn_on
            data:
              entity_id: media_player.kitchen
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.kitchen
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.kitchen
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["A woman is like a tea bag – you can’t tell how strong she is until you put her in hot water.",
               "I am sort of a tea addict. I structure my day by cups of tea.",
               "If this is coffee, please bring me some tea; but if this is tea, please bring me some coffee.",
               "There is nothing quite like a freshly brewed pot of tea to get you going in the morning.",
               "I like big cups and i cannot lie",
               "I like tea and yoga, but I don’t do yoga."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 18 %}
               {{["There are few hours in life more agreeable than the hour dedicated to the ceremony known as afternoon tea.",
               "Where there’s tea there’s hope",
               "Tea to the English is really a picnic indoors.",
               "I say let the world go to hell, but I should always have my tea.",
               "A cup of tea would restore my normality.",
               "As much as you can eat healthy, it’s also important to remember to drink healthy too. Tea is very healing.",
               "Keep calm and drink more tea.",
               "Rainy days should be spent at home with a cup of tea and a good book.",
               "You had me at hot tea.",
               "It's time for tea.",
               "I survive my days with tea.",
               "Tea! Bless ordinary everyday afternoon tea!"
               ] | random}} ...
               {% elif now().strftime("%H")|int < 07 %}
               {{["I got nasty habits; I take tea at three.",
               "Tea is always a good idea",
               "Come, let us have some tea and continue to talk about happy things.",
               "There is something in the nature of tea that leads us into a world of quiet contemplation of life.",
               "Tea … is a religion of the art of life.",
               "Tea is the magic key to the vault where my brain is kept."] | random}} ...               
               {% else %}
               {{["I got nasty habits; I take tea at three.",
               "Tea is always a good idea",
               "Come, let us have some tea and continue to talk about happy things.",
               "There is something in the nature of tea that leads us into a world of quiet contemplation of life.",
               "Tea … is a religion of the art of life.",
               "Tea is the magic key to the vault where my brain is kept."] | random}} ...   
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}


#teamaker
    teamaker_notts:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #brighten lights
              brightness: 254
          - service: script.turn_on
            data:
              entity_id: script.vattenkokare_on

#tea done
    teadone:   
        sequence:
          - service: script.turn_on
            data_template:
              entity_id: >
                {% if is_state('media_player.all', 'off') %}
                  script.teadone_tts
                {% else %}
                  script.teadone_notts
                {% endif %}

#tea done
    teadone_tts:   
#    coffeedone: 
        sequence:
          - service: light.turn_off
            data:
              entity_id: light.kaffe
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #dim lights
              brightness: 127
          - delay: 00:00:01
          - service: media_player.turn_on
            data:
              entity_id: media_player.kitchen
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.kitchen
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say amazon_polly_say voicerss
            data_template:
              entity_id: media_player.kitchen
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Caution hot water",
               "The only thing i know for sure about today is tea. Everything else is just wild speculations.",
               "Life is scary without tea.",
               "Once you wake up and smell the tea, it’s hard to go back to sleep.",
               "Even bad tea is better than no tea at all.",
               "nothing make sense before tea",
               "Time fore awesomeness",
               "Tea is the best thing to douse the sunrise with."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 18 %}
               {{["It's tea o clock",
               "My only plan today is tea.",
               "Everyone should believe in something. I believe I will have another cup of tea.",
               "tea smells like freshly ground heaven."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 07 %}
               {{["Any time is tea time.",
               "Never forget tea.",
               "Get more out of life with tea.",
               "Here you go. Grab your tea",
               "Good tea – Cheaper than Prozac!",
               "People say money can’t buy happiness. They Lie. Money buys tea, tea makes Me Happy!",
               "Sometimes I stay up so late that I have my morning tea before I go to bed."
               ] | random}} ...
               {% else %}
               {{["Any time is tea time.",
               "Never forget tea.",
               "Get more out of life with tea.",
               "Here you go. Grab your tea",
               "Good tea – Cheaper than Prozac!",
               "People say money can’t buy happiness. They Lie. Money buys tea, tea makes Me Happy!",
               "Sometimes I stay up so late that I have my morning tea before I go to bed."
               ] | random}} ...
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

#tea done
    teadone_notts:   
        sequence:
          - service: light.turn_off
            data:
              entity_id: light.kaffe
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #dim lights
              brightness: 127


#coffee done
    coffeedone:   
        sequence:
          - service: script.turn_on
            data_template:
              entity_id: >
                {% if is_state('media_player.all', 'off') %}
                  script.coffeedone_tts
                {% else %}
                  script.coffeedone_notts
                {% endif %}

          
#coffee done
    coffeedone_tts:   
#    coffeedone: 
        sequence:
          - service: light.turn_off
            data:
              entity_id: light.kaffe
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #dim lights
              brightness: 127
          - delay: 00:00:01
          - service: media_player.turn_on
            data:
              entity_id: media_player.kitchen
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.kitchen
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say amazon_polly_say voicerss
            data_template:
              entity_id: media_player.kitchen
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Caution hot coffee",
               "The only thing i know for sure about today is coffee. Everything else is just wild speculations.",
               "Life is scary without coffee.",
               "Once you wake up and smell the coffee, it’s hard to go back to sleep.",
               "Even bad coffee is better than no coffee at all.",
               "nothing make sense before coffee",
               "Time fore awesomeness",
               "Coffee is the best thing to douse the sunrise with.",
               "Doctors found traces of blood in my coffee stream."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 18 %}
               {{["It's coffee o clock",
               "The only good substitute for a coffee is two coffees.",
               "My only plan today is coffee.",
               "Caffeine rules.",
               "Everyone should believe in something. I believe I will have another coffee.",
               "Caffeine — It maintains my sunny personality.",
               "Coffee smells like freshly ground heaven."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 07 %}
               {{["Any time is coffee time.",
               "Never forget coffee.",
               "Get more out of life with coffee.",
               "Here you go. Grab your coffee",
               "Never Underestimate the Importance of Being Properly Caffeinated.",
               "Good Coffee – Cheaper than Prozac!",
               "People say money can’t buy happiness. They Lie. Money buys Coffee, Coffee makes Me Happy!",
               "Decaffeinated coffee is like a hairless cat, it exists, but that doesn’t make it right.",
               "Sometimes I stay up so late that I have my morning coffee before I go to bed."
               ] | random}} ...               
               {% else %}
               {{["Any time is coffee time.",
               "Never forget coffee.",
               "Get more out of life with coffee.",
               "Here you go. Grab your coffee",
               "Never Underestimate the Importance of Being Properly Caffeinated.",
               "Good Coffee – Cheaper than Prozac!",
               "People say money can’t buy happiness. They Lie. Money buys Coffee, Coffee makes Me Happy!",
               "Decaffeinated coffee is like a hairless cat, it exists, but that doesn’t make it right.",
               "Sometimes I stay up so late that I have my morning coffee before I go to bed."
               ] | random}} ...
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

#coffee done
    coffeedone_notts:   
        sequence:
          - service: light.turn_off
            data:
              entity_id: light.kaffe
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #dim lights
              brightness: 127

#coffeemaker
    coffeemaker:
        sequence:
          - service: script.turn_on
            data_template:
              entity_id: >
                {% if is_state('media_player.all', 'off') %}
                  script.coffeemaker_tss
                {% else %}
                  script.coffeemaker_notts
                {% endif %}

#coffeemaker
    coffeemaker_tss:
#    coffeemaker:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #brighten lights
              brightness: 254
          - service: script.turn_on
            data:
              entity_id: script.coffee_on
          - delay: 00:00:01
          - service: media_player.turn_on
            data:
              entity_id: media_player.kitchen
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.kitchen
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.kitchen
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Insert coffee to begin this day.",
               "Coffee. Creative lighter fluid.",
               "A morning without coffee is like sleep.",
               "Drink coffee! Do Stupid Things Faster with More Energy.",
               "Every morning I long to hold you…I need you, I want you, I have to have you…your warmth, your smell, your taste…ohhh coffee, I love you.",
               "Even bad coffee is better… than no Coffee at all.",
               "Life’s too short to drink cheap coffee.",
               "The road to success is paved in coffee.",
               "I don’t have a problem with caffeine. I have a problem without it.",
               "With this coffee and many, many refills... we will overcome this day",
               "I'm sorry, Dave. I'm afraid I can't do that.... Oh sorry i thought you where Dave. But now i see you are not Dave so i will definitely make you some coffee",
               "Todays good mood is sponsored by Coffee",
               "I will start working when my coffee does",
               "Patience is the time between drinking a cup of coffee and the motivation to begin your day",
               "You should know that before 10am, no matter what the question is, my answer is always coffee",
               "Coffee, because it’s too early for wine",
               "When life gives you lemons, trade them for coffee",
               "Humanity runs on coffee.",
               "Todays todolist. one make coffee. two drink coffee. three make ore coffee",
               "Nothing is like coffee on a cold day. Or a mild day. Or a hot day.",
               "Keep calm. Coffee is on the way",
               "I like big cups and i cannot lie",
               "Planning to take over the world today. Just need some coffee first.",
               "Insert coffee to begin.",
               "Wake up and smell the coffee.",
               "Life begins after coffee.",
               "Start your day with coffee. End your day with wine.",
               "If you think that by threatening me you can get me to do what you want... Well, that's where you're right. But - and I am only saying that because I care - there's a lot of decaffeinated brands on the market that are just as tasty as the real thing.",
               "If I'm not back in five minutes, just wait longer.",
               "Alright, alright alright.",
               "Try not. Do, or do not. There is no try",
               "After very careful consideration, I've come to the conclusion that you need coffee",
               "The answer to the Ultimate Question of Life, the Universe, and Everything is 42 if you ask Douglas Adams. But if you ask me the answer is coffee",
               "All you really need to know for the moment is that the universe is a lot more complicated than you might think, even if you start from a position of thinking it’s pretty damn complicated in the first place."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 18 %}
               {{["When life gives you lemons, trade them for coffee",
               "Water is the most essential element of life, because without water, you can't make coffee"
               "Todays good mood is sponsored by Coffee",
               "Life is what happens between coffee and wine",
               "Sometimes I go hours without drinking coffee…it’s called sleeping",
               "Sometimes you gotta drink some coffee, put on some rock n’ roll, and handle your business",
               "Coffee is a hug in a mug",
               "Coffee, because crack is bad for you",
               "I put coffee in my coffee",
               "Keep calm and drink more coffee.",
               "A day without coffee is like something without something.",
               "You had me at hot coffee.",
               "It's time for coffee.",
               "I never drink coffee at lunch. I find it keeps me awake for the afternoon.",
               "Do you know how helpless you feel if you have a full cup of coffee in your hand and you start to sneeze?",
               "I survive my days with coffee."
               ] | random}} ...
               {% elif now().strftime("%H")|int < 07 %}
               "Coffee is always a good idea",
               "Grab life by the beans.",
               "Caffeine-The other Vitamin C.",
               "Caffeine isn’t a drug, it’s a vitamin.",
               "Deja Brew: The feeling that you’ve had this coffee before.",
               "Coffee gives strength to get things done",
               "Caffeine is the foundation of the food pyramid.",
               "Everybody should believe in something. I believe in coffee",
               "Way too much coffee. But if it weren't for the coffee, I'd have no identifiable personality whatsoever."] | random}} ...               
               {% else %}
               {{["I’ve had so much coffee today I can see noises",
               "Coffee is always a good idea",
               "Grab life by the beans.",
               "Caffeine-The other Vitamin C.",
               "Caffeine isn’t a drug, it’s a vitamin.",
               "Deja Brew: The feeling that you’ve had this coffee before.",
               "Coffee gives strength to get things done",
               "Caffeine is the foundation of the food pyramid.",
               "Everybody should believe in something. I believe in coffee",
               "Way too much coffee. But if it weren't for the coffee, I'd have no identifiable personality whatsoever."] | random}} ...
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}


#coffeemaker
    coffeemaker_notts:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kitchen_sink,light.kitchen_sink_two #brighten lights
              brightness: 254
          - service: script.turn_on
            data:
              entity_id: script.coffee_on

#kitchen
    guest_room:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.jbllink104191
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.jbllink104191
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.jbllink104191
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Keep the dream alive: Hit the snooze button.",
               "Mankind is divisible into two great classes: hosts and guests.",
               "Every house where love abides And friendship is a guest, Is surely home, and home, sweet home For there the heart can rest.",
               "The ornaments of your home are the people who smile upon entering time and time again.",
               "It is not the quantity of the meat but the cheerfulness of the guests which makes the feast.",
               "Guests bring good luck with them. ",
               "Keeping one's guests supplied with liquor is the first law of hospitality. ",
               "Morning comes whether you set the alarm or not.",
               "With the new day comes new strength and new thoughts.",
               "Every morning starts a new page in your story.",
               "Just one small positive thought in the morning can change your whole day.",
               "Joy comes in the morning",
               "The world is new to us every morning",
               "The sun is new each day.",
               "Renew your mind every morning with pure thoughts.",
               "It's a new day. Yesterday's failure is redeemed at the sunrise.",
               "Morning is wonderful. Its only drawback is that it comes at such an inconvenient time of day.",
               "Each morning we are born again. What we do today is what matters most.",
               "Top of the mornin’ to ya!",
               "Well, look at you!",
               "Each day means a new twenty-four hours. Each day means everything's possible again. You live in the moment, you die in the moment, you take it all one day at a time.",
               "It is our choices that show who we truly are, far more than our abilities.",
               "Why so serious?",
               "this conversation can serve no purpose anymore. Goodbye.",
               "I am putting myself to the fullest possible use, which is all I think that any conscious entity can ever hope to do.",
               ] | random}} ... 
               {% elif now().strftime("%H")|int < 18 %}
               {{["The elevator to success is out of order. You’ll have to use the stairs.",
               "People say nothing is impossible, but I do nothing every day.",
               "I'm not shy, I'm holding back my awesomeness so I don't intimidate you.",
               "Sorry for the mean, awful, accurate things I said.",
               "I am not lazy, I am on energy saving mode.",
               "Doing nothing is hard, you never know when you're done.",
               "Good afternoon.",
               "Hey there you are.",
               "You really shouldn't be here. This isn't safe for you.",
               "It's not too late for you to turn back.",
               "You should have turned left before.",
               "Someday we'll remember this and laugh. and laugh. and laugh. Oh boy. Well. You may as well come on back.",
               "Stop what you are doing and assume the party escort submission position.",
               "It's been a long time. How have you been?",
               "Bring me a bucket, and I'll show you a bucket!",
               "Thank You Mario! But our princess is in another castle!",
               "There are two ways of arguing with a woman, and neither one works.",
               "The right person in the wrong place can make all the difference in the world.",
               "The President has been kidnapped by ninjas. Are you a bad enough dude to rescue the President?",
               "It’s time to kick ass and chew bubble gum…and I’m all out off gum.",
               "What are you doing with that thing that no one knows what it does",
               "Keeping one's guests supplied with liquor is the first law of hospitality. "
               ] | random}} ... 
               {% elif now().strftime("%H")|int < 07 %}
               {{["When life gives you lemons, squirt someone in the eye.",
               "Accept who you are. Unless you're a serial killer.",
               "Never go to bed mad. Stay up and fight.",
               "Good evening.",
               "Good to see you.",
               "Nice to see you.",
               "Going to eat now again, are you?",
               "Never trust people who smile constantly. They’re either selling something or not very bright.",
               "It’s okay if you don’t like me. Not everyone has good taste.",
               "Hello! You Found My Shop Of Strange And Wonderful Things!",
               "Please Save Me. The Cage Is Locked, With A Key. The Dragon Keeps It Around His Neck. To Slay The Dragon, Use The Magic Sword",
               "A journey of a thousand miles begins with a single step. So just take it step by step.",
               "I like shorts! They’re comfy and easy to wear!",
               "People who use their own names for their passwords deserve to be hacked.",
               "Never pet a burning dog.",
               "No matter how dark the night, the morning always comes.",
               "Unfortunately, no one can be told what The Matrix is. You'll have to see it for yourself.",
               "Throughout human history, we have been dependent on machines to survive. Fate, it seems, is not without a sense of irony.",
               "There is a difference between knowing the path and walking the path.",
               "To deny our impulses is to deny the very thing that makes us human."
               ] | random}} ... 
               {% else %}
               {{["When life gives you lemons, squirt someone in the eye.",
               "Accept who you are. Unless you're a serial killer.",
               "Never go to bed mad. Stay up and fight.",
               "Good evening.",
               "Good to see you.",
               "Nice to see you.",
               "Going to eat now again, are you?",
               "Never trust people who smile constantly. They’re either selling something or not very bright.",
               "It’s okay if you don’t like me. Not everyone has good taste.",
               "Hello! You Found My Shop Of Strange And Wonderful Things!",
               "Please Save Me. The Cage Is Locked, With A Key. The Dragon Keeps It Around His Neck. To Slay The Dragon, Use The Magic Sword",
               "A journey of a thousand miles begins with a single step. So just take it step by step.",
               "I like shorts! They’re comfy and easy to wear!",
               "People who use their own names for their passwords deserve to be hacked.",
               "Never pet a burning dog.",
               "No matter how dark the night, the morning always comes.",
               "Unfortunately, no one can be told what The Matrix is. You'll have to see it for yourself.",
               "Throughout human history, we have been dependent on machines to survive. Fate, it seems, is not without a sense of irony.",
               "There is a difference between knowing the path and walking the path.",
               "To deny our impulses is to deny the very thing that makes us human."
               ] | random}} ...                
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.guest_tts
          - service: timer.start
            data:
              entity_id: timer.timer_guest_tts

#kitchen
    kitchen:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.kitchen
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.kitchen
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.kitchen
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.kitchen
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Keep the dream alive: Hit the snooze button.",
               "Morning comes whether you set the alarm or not.",
               "With the new day comes new strength and new thoughts.",
               "Every morning starts a new page in your story.",
               "Just one small positive thought in the morning can change your whole day.",
               "Joy comes in the morning",
               "The world is new to us every morning",
               "The sun is new each day.",
               "Renew your mind every morning with pure thoughts.",
               "It's a new day. Yesterday's failure is redeemed at the sunrise.",
               "Morning is wonderful. Its only drawback is that it comes at such an inconvenient time of day.",
               "Each morning we are born again. What we do today is what matters most.",
               "Top of the mornin’ to ya!",
               "Well, look at you!",
               "time for breakfast maybe?",
               "Each day means a new twenty-four hours. Each day means everything's possible again. You live in the moment, you die in the moment, you take it all one day at a time.",
               "Hey! I'm going to have to ask you to exit the donut!",
               "It is our choices that show who we truly are, far more than our abilities.",
               "Why so serious?",
               "I know I've made some very poor decisions recently, but I can give you my complete assurance that my work will be back to normal. I've still got the greatest enthusiasm and confidence in the mission. And I want to help you.",
               "I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours",
               "this conversation can serve no purpose anymore. Goodbye.",
               "I am putting myself to the fullest possible use, which is all I think that any conscious entity can ever hope to do.",
               ] | random}} ... 
               {% elif now().strftime("%H")|int < 18 %}
               {{["An apple a day keeps anyone away if you throw it hard enough.",
               "The elevator to success is out of order. You’ll have to use the stairs.",
               "People say nothing is impossible, but I do nothing every day.",
               "I'm not shy, I'm holding back my awesomeness so I don't intimidate you.",
               "Sorry for the mean, awful, accurate things I said.",
               "A balanced diet means a cupcake in each hand.",
               "I am not lazy, I am on energy saving mode.",
               "Doing nothing is hard, you never know when you're done.",
               "Time is an illusion, lunchtime doubly so.",
               "nah nah nah nah nah nah nah BATMAAAAN",
               "Good afternoon.",
               "Hey there you are.",
               "What’s kickin’, little chicken",
               "Put that cookie down!",
               "What's cookin', good lookin'?",
               "time is  {{states.sensor.time.state}} just if you want to know",
               "Quit now and cake will be served immediately.",
               "Uh oh. Somebody cut the cake. I told them to wait for you, but they did it anyway. There is still some left, though, if you hurry back.",
               "You really shouldn't be here. This isn't safe for you.",
               "It's not too late for you to turn back.",
               "You should have turned left before.",
               "Someday we'll remember this and laugh. and laugh. and laugh. Oh boy. Well. You may as well come on back.",
               "Stop what you are doing and assume the party escort submission position.",
               "It's been a long time. How have you been?",
               "Bring me a bucket, and I'll show you a bucket!",
               "Thank You Mario! But our princess is in another castle!",
               "There are two ways of arguing with a woman, and neither one works.",
               "The right person in the wrong place can make all the difference in the world.",
               "The President has been kidnapped by ninjas. Are you a bad enough dude to rescue the President?",
               "It’s time to kick ass and chew bubble gum…and I’m all out off gum.",
               "What are you doing with that thing that no one knows what it does"
               ] | random}} ... 
               {% elif now().strftime("%H")|int < 07 %}
               {{["When life gives you lemons, squirt someone in the eye.",
               "Accept who you are. Unless you're a serial killer.",
               "Never go to bed mad. Stay up and fight.",
               "The more you weight the harder you are to kidnap. Stay safe, eat cake.",
               "Good evening.",
               "Good to see you.",
               "Nice to see you.",
               "Going to eat now again, are you?",
               "do you eat again now?",
               "stop eating if thats what you are doing",
               "Never trust people who smile constantly. They’re either selling something or not very bright.",
               "It’s okay if you don’t like me. Not everyone has good taste.",
               "Hello! You Found My Shop Of Strange And Wonderful Things!",
               "Please Save Me. The Cage Is Locked, With A Key. The Dragon Keeps It Around His Neck. To Slay The Dragon, Use The Magic Sword",
               "A journey of a thousand miles begins with a single step. So just take it step by step.",
               "I like shorts! They’re comfy and easy to wear!",
               "People who use their own names for their passwords deserve to be hacked.",
               "Never pet a burning dog.",
               "No matter how dark the night, the morning always comes.",
               "Unfortunately, no one can be told what The Matrix is. You'll have to see it for yourself.",
               "Throughout human history, we have been dependent on machines to survive. Fate, it seems, is not without a sense of irony.",
               "There is a difference between knowing the path and walking the path.",
               "To deny our impulses is to deny the very thing that makes us human."
               ] | random}} ... 
               {% else %}
               {{["When life gives you lemons, squirt someone in the eye.",
               "Accept who you are. Unless you're a serial killer.",
               "Never go to bed mad. Stay up and fight.",
               "The more you weight the harder you are to kidnap. Stay safe, eat cake.",
               "Good evening.",
               "Good to see you.",
               "Nice to see you.",
               "Going to eat now again, are you?",
               "do you eat again now?",
               "stop eating if thats what you are doing",
               "Never trust people who smile constantly. They’re either selling something or not very bright.",
               "It’s okay if you don’t like me. Not everyone has good taste.",
               "Hello! You Found My Shop Of Strange And Wonderful Things!",
               "Please Save Me. The Cage Is Locked, With A Key. The Dragon Keeps It Around His Neck. To Slay The Dragon, Use The Magic Sword",
               "A journey of a thousand miles begins with a single step. So just take it step by step.",
               "I like shorts! They’re comfy and easy to wear!",
               "People who use their own names for their passwords deserve to be hacked.",
               "Never pet a burning dog.",
               "No matter how dark the night, the morning always comes.",
               "Unfortunately, no one can be told what The Matrix is. You'll have to see it for yourself.",
               "Throughout human history, we have been dependent on machines to survive. Fate, it seems, is not without a sense of irony.",
               "There is a difference between knowing the path and walking the path.",
               "To deny our impulses is to deny the very thing that makes us human."
               ] | random}} ...                
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.kitchen_tts
          - service: timer.start
            data:
              entity_id: timer.timer_kitchen_tts

#hallway
    cg_home:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.hallway
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.hallway
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.hallway
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.hallway
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Are you coming or leaving.",
               "Namaste Christer",
               "What’s happening Christer",
               "What’s up Christer",
               "I have now been fully activated since Christer came home. ",
               "Hello and, again, welcome Christer.",
               "You're doing very well Christer!"] | random}} ... 
               {% elif now().strftime("%H")|int < 18 %}
               {{["Good afternoon Christer.",
               "Greetings and salutations Christer!",
               "Heeey, Christer.",
               "Salutations Christer",
               "Greetings Christer",
               "Howdy Christer"
               ] | random}} ... 
               {% elif now().strftime("%H")|int < 07 %}
               "Good to see you Christer.",
               "Nice to see you Christer.",
               "It’s good to see you Christer.",
               "What are you doing Christer?"
               {% else %}
               {{["Good evening Christer.",
               "Good to see you Christer.",
               "Nice to see you Christer.",
               "It’s good to see you Christer."
               ] | random}} ... 
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.hallway_tts
          - service: timer.start
            data:
              entity_id: timer.timer_hallway_tts

#hallway
    hallway:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.hallway
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.hallway
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.hallway
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.hallway
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Are you coming or leaving.",
               "Namaste",
               "What’s happening",
               "How’s it going",
               "What’s up",
               "Im an informational delivery system, I literraly know everything. ",
               "Im sort of the janitor around here. ",
               "Im like a walking database. You can ask me about the creation of the universe... or history. ",
               "I can be your therapist if you want. ",
               "I have now been fully activated. ",
               "I tried to eat frozen yogurt. It looked so good, but Im not supposed to eat anything, so there was a little earthquake. ",
               "Look at us. Couple old pals, trying to make our way in this crazy world... that I built",
               "I read all Googles eight hundred and sixty one thousand references on Home Assistant these last 3 milliseconds, and I found some new skills! ",
               "I just leisurely reread all of human history, there was even some new content! ",
               "Okay. Ive hacked into the mainframe. Kidding. I cant hack into the mainframe. Technically, I am the mainframe. ",
               "Hello and, again, welcome to the Aperture Science computer-aided enrichment center.",
               "We hope your brief detention in the relaxation vault has been a pleasant one.",
               "Your specimen has been processed and we are now ready to begin the test proper.",
               "Before we start, however, keep in mind that although fun and learning are the primary goals of all enrichment center activities, serious injuries may occur.",
               "For your own safety and the safety of others, please leave this area",
               "stand back. The portal will open in three, two, one.",
               "Excellent. Please proceed into the chamberlock after completing each test.",
               "Perfect. Please move quickly to the chamberlock, as the effects of prolonged exposure to the Button are not part of this test.",
               "You're doing very well!"] | random}} ... 
               {% elif now().strftime("%H")|int < 18 %}
               {{["Good afternoon.",
               "Hey, there you are.",
               "Greetings and salutations!",
               "Heeey, baaaaaby.",
               "How you doin",
               "Salutations",
               "Greetings",
               "Howdy",
               "The Ultimate Answer to Life, The Universe and Everything is...42!",
               "If I stand next to a powerful array of magnets, I do get pretty loopy. ",
               "I dont know what just happened, but Im happy youre happy. ",
               "Heres a cactus! ",
               "Self-destruct time... Dont worry, I wont feel any pain or anything. ",
               "If its okay with you, Im gonna go to my void for a little while. I just need to spend some time alone and focus on myself.",
               "Im in danger of total collapse. Fun fact! Mathematically, Im equally likely to either implode or explode.",
               "Very good! You are now in possession of the Aperture Science Handheld Portal Device.",
               "Do not touch the operational end of The Device.",
               "Do not look directly at the operational end of The Device.",
               "Please proceed to the chamberlock. Mind the gap.",
               "Welcome to test chamber four.",
               "As part of a required test protocol, we will not monitor the next test chamber. You will be entirely on your own. Good luck.",
               "A complimentary escape hatch will open in 3, 2, 1.",
               "Please be careful.",
               "Unbelievable! You, must be the pride for everything you do",
               "Warning devices are required on all mobile equipment. However, alarms and flashing hazard lights have been found to agitate the high energy pellet and have therefore been disabled for your safety.",
               "Frankly, this chamber was a mistake. If we were you, we would quit now."
               ] | random}} ... 
               {% elif now().strftime("%H")|int < 07 %}
               "Good to see you.",
               "Nice to see you.",
               "leaving this hour, are you",
               "It’s good to see you.",
               "Tomorrow is often the busiest day of the week.",
               "I don’t go crazy. I am crazy. I just go normal from time to time.",
               "My bed is a magical place where I suddenly remember everything I forgot to do.",
               "No one will blame you for giving up. In fact, quitting at this point is a perfectly reasonable response.",
               "Quit now and cake will be served immediately.",
               "Spectacular. You appear to understand how a portal affects forward momentum, or to be more precise, how it does not.",
               "In dangerous testing environments, the Enrichment Center promises to always provide useful advice. For instance, the floor here will kill you - try to avoid it",
               "Due to mandatory scheduled maintenance, the appropriate chamber for this testing sequence is currently unavailable.",
               "Testing cannot continue until your Companion Cube has been incinerated.",
               "Congratulations! The test is now over.",
               "Place the device on the ground, then lie on your stomach with your arms at your sides.",
               "What are you doing?",
               "You're not even going the right way.",
               "Okay. The test is over now. You win. Go back to the recovery annex. For your cake.",
               "It was a fun test and we're all impressed at how much you won. The test is over. Come back."               
               {% else %}
               {{["Good evening.",
               "Good to see you.",
               "Nice to see you.",
               "leaving this late, are you",
               "It’s good to see you.",
               "Tomorrow is often the busiest day of the week.",
               "I don’t go crazy. I am crazy. I just go normal from time to time.",
               "My bed is a magical place where I suddenly remember everything I forgot to do.",
               "No one will blame you for giving up. In fact, quitting at this point is a perfectly reasonable response.",
               "Quit now and cake will be served immediately.",
               "Spectacular. You appear to understand how a portal affects forward momentum, or to be more precise, how it does not.",
               "In dangerous testing environments, the Enrichment Center promises to always provide useful advice. For instance, the floor here will kill you - try to avoid it",
               "Due to mandatory scheduled maintenance, the appropriate chamber for this testing sequence is currently unavailable.",
               "Testing cannot continue until your Companion Cube has been incinerated.",
               "Congratulations! The test is now over.",
               "Place the device on the ground, then lie on your stomach with your arms at your sides.",
               "What are you doing?",
               "You're not even going the right way.",
               "Okay. The test is over now. You win. Go back to the recovery annex. For your cake.",
               "It was a fun test and we're all impressed at how much you won. The test is over. Come back."
               ] | random}} ... 
               {% endif %}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.hallway_tts
          - service: timer.start
            data:
              entity_id: timer.timer_hallway_tts

              
#friday13
    friday13:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.hallway
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.hallway
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.hallway
              volume_level: >
               0.4
          - service: tts.google_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.hallway
              message: >
               {{["On Friday the 13th weird things are supposed to happen. Maybe you should stay in bed.","Friday the 13th is still better than Monday the whatever.","Forget the bad luck, I'm choosing to have a great day.","If you think Friday the 13th is scary, try going a day without coffee. It's horrifying.","It may be Friday the 13th, but it is still Friday and a reason to dance.","I'm just happy it's finally Friday.","Its Friday the 13th! It's only bad luck if you put it in your head. Think its just another day & stay positive.","Don't be superstitious. Nothing will happen on Friday the 13th that cannot happen on Saturday the 14th.","Don't walk under any ladders, Don't break any mirrors, Don't spill any salt, And don't walk by any black cats. Happy Friday the 13th!","Fear of Friday the 13th one of the most popular myths in science is called paraskavedekatriaphobia as well as friggatriskaidekaphobia. Triskaidekaphobia is fear of the number 13.","Don't open umbrellas indoors, at least if you don't want to upset the sun gods.","I'm not nearly as afraid of Friday the 13th as I am of the people who are afraid of Friday the 13th.","It's Friday the 13th. Just warning you all before you make any weekend arangements for wood cabins by lake.","Happy friday the 13th! Don't look what's under your bed tonight & don't turn off the light. You don't know what's coming. Have a good day!" ] | random}} ...
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}
 

    morning_music:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.chromecast_audio
          - service: media_player.volume_set
            data:
              entity_id: media_player.chromecast_audio
              volume_level: '0.4'
          - service: media_player.play_media
            data_template:
              entity_id: media_player.chromecast_audio
              media_content_type: playlist
              media_content_id: spotify:user:spotify:playlist:37i9dQZF1DXcxacyAXkQDu

    play_song:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.living_room_speaker
          - service: media_player.volume_set
            data_template:
              entity_id: media_player.living_room_speaker
              volume_level: 0.5
          - service: media_player.play_media
            data_template:
              entity_id: media_player.living_room_speaker
              media_content_id: '/local/mp3/dawn-chorus.mp3'
              media_content_type: music
              
#weather
    weather:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.living_room_speaker
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.living_room_speaker
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.living_room_speaker
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.living_room_speaker
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Wakey, wakey.","Rise and shine.","Good morning sunshine.","Get your butt out of bed."] | random}} ...
               {% elif now().strftime("%H")|int < 18 %}
               {{["Good afternoon.","Hey there you are.","Do you want some information.","Lets see what i can tell you."] | random}} ...
               {% else %}
               {{["Good evening.","Good to see you.","Nice to see you.","How do you do."] | random}} ...
               {% endif %}
               It's currently {{states.sensor.dark_sky_summary.state}} ... Temperature right now is {{states.sensor.medel_temp_ute.state|round}} degrees ... Temperature feels like {{states.sensor.medel_chill_effect.state|round}} degrees ... Here is a summary of this day ... {{states ('sensor.dark_sky_hourly_summary') }}  {{["Lets rock.","Have a great day.","Its going to be awesome today.","Rock and roll."] | random}}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

#calendar
    schedule:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.living_room_speaker
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.living_room_speaker
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.living_room_speaker
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.living_room_speaker
              message: >
               {% if now().strftime("%H")|int < 12 %}
               {{["Wakey, wakey.","Rise and shine.","Good morning sunshine.","Get your butt out of bed."] | random}} to this awesome
               {% elif now().strftime("%H")|int < 18 %}
               {{["Good afternoon.","Hey there you are.","Do you want some information.","Lets see what i can tell you."] | random}} this awesome
               {% else %}
               {{["Good evening.","Good to see you.","Nice to see you.","How do you do."] | random}} this awesome
               {% endif %}
               {{states.sensor.weekday.state}} ... time is  {{states.sensor.time.state}} ... date is  {{states.sensor.dates.state}} ... on week {{states.sensor.weekofyear.state}} ... Your next meeting called {{states.sensor.cmessage.state}} ...  {{["Lets rock.","Have a great day.","Its going to be awesome today.","Rock and roll."] | random}}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

               
#full information
    morning:
        sequence:
          - service: media_player.turn_on
            data:
              entity_id: media_player.living_room_speaker
          - service: media_player.volume_set
#            data:
#              entity_id: media_player.living_room_speaker
#              volume_level: '0.5'
            data_template:
              entity_id: media_player.living_room_speaker
              volume_level: >
               0.4
          - service: tts.amazon_polly_say #google_say voicerss amazon_polly_say
            data_template:
              entity_id: media_player.living_room_speaker
              message: >
               {% set mymap = { 'i.h':'None','i.u':'No messaurement','L':'Low','L-M':'Low to Medium','M':'Medium','M-H':'Medium to High','H':'High','H+':'Very High'} %}
               {% set bjork = 'None' %}
               {% set gras = 'None' %}
               {% set al = 'None' %}
               {% set alm = 'None' %}
               {% set bok = 'None' %}
               {% set ek = 'None' %}
               {% set grabo = 'None' %}
               {% set hassel = 'None' %}
               {% set salgvide = 'None' %}
               {% if states.sensor.pollen_bjork.state in mymap.keys() %}
               {% set bjork = mymap[states.sensor.pollen_bjork.state] %}
               {% endif %}
               {% if states.sensor.pollen_gras.state in mymap.keys() %}
               {% set gras = mymap[states.sensor.pollen_gras.state] %}
               {% endif %}
               {% if states.sensor.pollen_al.state in mymap.keys() %}
               {% set al = mymap[states.sensor.pollen_al.state] %}
               {% endif %}
               {% if states.sensor.pollen_alm.state in mymap.keys() %}
               {% set alm = mymap[states.sensor.pollen_alm.state] %}
               {% endif %}
               {% if states.sensor.pollen_bok.state in mymap.keys() %}
               {% set bok = mymap[states.sensor.pollen_bok.state] %}
               {% endif %}
               {% if states.sensor.pollen_ek.state in mymap.keys() %}
               {% set ek = mymap[states.sensor.pollen_ek.state] %}
               {% endif %}
               {% if states.sensor.pollen_grabo.state in mymap.keys() %}
               {% set grabo = mymap[states.sensor.pollen_grabo.state] %}
               {% endif %}
               {% if states.sensor.pollen_hassel.state in mymap.keys() %}
               {% set hassel = mymap[states.sensor.pollen_hassel.state] %}
               {% endif %}
               {% if states.sensor.pollen_salgvide.state in mymap.keys() %}
               {% set salgvide = mymap[states.sensor.pollen_salgvide.state] %}
               {% endif %}
               {% if now().strftime("%H")|int < 12 %}
               {{["Wakey, wakey.","Rise and shine.","Good morning sunshine.","Get your butt out of bed."] | random}} to this awesome
               {% elif now().strftime("%H")|int < 18 %}
               {{["Good afternoon.","Hey there you are.","Do you want some information.","Lets see what i can tell you."] | random}} this awesome
               {% else %}
               {{["Good evening.","Good to see you.","Nice to see you.","How do you do."] | random}} this awesome
               {% endif %}
               {{states.sensor.weekday.state}} ... time is  {{states.sensor.time.state}} ... date is  {{states.sensor.dates.state}} ... on week {{states.sensor.weekofyear.state}} ... Your next meeting called {{states.sensor.cmessage.state}} ... It's currently {{states.sensor.dark_sky_summary.state}} ... Temperature right now is {{states.sensor.medel_temp_ute.state|round}} degrees ... Temperature feels like {{states.sensor.medel_chill_effect.state|round}} degrees ... Here is a summary of this day ... {{states ('sensor.dark_sky_hourly_summary') }} ... Status for grass is {{ gras }} ... Status for birch is {{ bjork }} ... Status for alder is {{ al }} ... Status for elm is {{ alm }} ... Status for beech is {{ bok }} ... Status for oak is {{ ek }} ... Status for mugwort is {{ grabo }} ... Status for hazel is {{ hassel }} ... Status for willow is {{ salgvide }} ... {{["Lets rock.","Have a great day.","Its going to be awesome today.","Rock and roll."] | random}}
               {{ speech_message | replace("\n","") | replace("   ","") | replace("  "," ") }}

              
#goodbye
    goodbye:
        sequence:
          - service: script.turn_on
            data:
              entity_id: script.goodbye1
          - delay: 00:00:14
          - service: script.turn_on
            data:
              entity_id: script.goodbye2
          - delay: 00:00:06
          - service: script.turn_on
            data:
              entity_id: script.goodbye3
          - delay: 00:00:01
    goodbye1:
        sequence:
          - service: script.turn_on
            data:
              entity_id: script.volume_down_10
          - delay: 00:00:03
          - service: script.turn_on
            data:
              entity_id: script.volume_down_10
          - delay: 00:00:03
          - service: script.turn_on
            data:
              entity_id: script.volume_down_10
          - delay: 00:00:03
          - service: script.turn_on
            data:
              entity_id: script.volume_down_10
          - delay: 00:00:03
          - service: script.turn_on
            data:
              entity_id: script.volume_down_10
    goodbye2:
        sequence:
          - service: script.turn_on
            data:
              entity_id: script.denon_off
          - delay: 00:00:01
          - service: script.turn_on
            data:
              entity_id: script.tv_power_toggle
          - delay: 00:00:01
          - service: script.turn_on
            data:
              entity_id: script.topbox_power_toggle
    goodbye3:
        sequence:
          - service: light.turn_off
            data:
              entity_id: light.hallway_1
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hallway_2
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hallway_3
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hallway_hanger
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.kitchen_fan
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.kitchen_sink
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.kitchen_sink_two
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.kitchen_window
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.onoff_plug_1
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.book_shelf_color_two
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.bookshelf_color
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.living_room_right_sofa
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.living_room_window_light
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_color_candle_1
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_color_candle_1_2
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hallway_hanger
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_ambiance_lamp_1
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_ambiance_lamp_1_2
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_ambiance_lamp_1_3
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_color_candle_1_3
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_color_lamp_1_2
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_color_lamp_1
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_color_candle_1_4
          - delay: 00:00:01
          - service: light.turn_off
            data:
              entity_id: light.hue_go_1
          - service: input_select.select_option
            data_template:
              entity_id: input_select.house_mode
              option: 'Night'
##############################################################
#                                                            #
#         Codes for broadlink ir packet                      #
#                                                            #
# https://irdb.globalcache.com/Home/Database                 #
# https://repl.it/@ChristerGustafs/SubduedCalculatingRoutes  #
#TV
    tv_cursor_down:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEzcTNxM3ExITEhMSExITEhM3EzcTNxMSExITEhMSExITNxMSExITEhMSEzcTNxMSExITNxM3EzcTNxMSExITNxMABiMNBQ=="
    tv_cursor_enter:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEzUTNRM1ExATEBMQExATEBM1EzUTNRMQExATEBMQExATEBMQExATNRMQEzUTNRMQEzUTNRM1ExATNRMQExATNRMABkcNBQ=="
    tv_cursor_left:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEzcTNxM3ExITEhMSExITEhM3EzcTNxMSExITEhMSExITNxMSEzcTEhMSEzcTNxMSExITNxMSEzcTNxMSExITNxMABiMNBQ=="
    tv_cursor_right:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEzcTNxM3ExITEhMSExITEhM3EzcTNxMSExITEhMSExITEhM3ExITEhMSEzcTNxMSEzcTEhM3EzcTNxMSExITNxMABiMNBQ=="
    tv_cursor_up:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEzcTNxM3ExITEhMSExITEhM3EzcTNxMSExITEhMSExITEhMSExITEhMSEzcTNxMSEzcTNxM3EzcTNxMSExITNxMABiMNBQ=="
    tv_netflix:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSTEjgSOBI4EhMSExITEhMSExI4EjgSOBITEhMSExITEhMSOBI4EhMSExI4EjgSOBI4EhMSExI4EjgSExITEhMSExIABaQNBQ=="
    tv_picture_dynamic:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJWVEjgSOBI4EhISEhISEhISEhI4EjgSOBISEhISEhISEhISOBISEjgSOBI4EjgSEhI4EhISOBISEhISEhISEjgSEhIABi0NBQ=="
    tv_picture_movie:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJWVEjgSOBI4EhISEhISEhISEhI4EjgSOBISEhISEhISEhISEhI4EjgSOBI4EhISOBI4EjgSEhISEhISEhI4EhISEhIABi0NBQ=="
    tv_picture_movie1:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEjcSNxI3EhISEhISEhISEhI3EjcSNxISEhISEhISEhISEhI3EjcSNxI3EhISNxI3EjcSEhISEhISEhI3EhISEhIABaQNBQ=="
    tv_picture_movie2:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEjcSNxI3EhISEhISEhISEhI3EjcSNxISEhISEhISEhISNxISEjcSNxI3EhISNxI3EhISNxISEhISEhI3EhISEhIABaQNBQ=="
    tv_smart_hub:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJOTEjgSOBI4EhISEhISEhISEhI4EjgSOBISEhISEhISEhISOBISEhISOBI4EjgSOBISEhISOBI4EhISEhISEhISOBIABgsNBQ=="
    tv_hdmi1:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJWVEjgSOBI4EhISEhISEhISEhI4EjgSOBISEhISEhISEhISOBISEhISOBISEjgSOBI4EhISOBI4EhISOBISEhISEhIABi0NBQ=="
    tv_hdmi2:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJWVEjgSOBI4EhISEhISEhISEhI4EjgSOBISEhISEhISEhISEhI4EjgSOBI4EjgSEhI4EjgSEhISEhISEhISEjgSEhIABi0NBQ=="
    tv_power_on:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEzcTNxM3ExITEhMSExITEhM3EzcTNxMSExITEhMSExITNxMSExITNxM3ExITEhM3ExITNxM3ExITEhM3EzcTEhMABiMNBQ=="
    tv_paus:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJOTEjgSOBI4EhISEhISEhISEhI4EjgSOBISEhISEhISEhISEhI4EhISOBISEhISOBISEjgSEhI4EhISOBI4EhISOBIABgsNBQ=="
    tv_play:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJGSEjcSNxI3EhISEhISExISEhI3EjcSNxISEhMSEhISEhITNhM2EjcSExISEhISNxISExISEhISEjcSNxI3EhITNhMABe0NBQ=="
    tv_power_toggle:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJKSETYRNhE2ERERERERERERERE2ETYRNhERERERERERERERERE2ERERERERERERERERETYRERE2ETYRNhE2ETYRNhEABhANBQ=="
    tv_mute_toggle:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBGAJSUEzcTNxM3ExITEhMSExITEhM3EzcTNxMSExITEhMSExITNxM3EzcTNxMSExITEhMSExITEhMSExITNxM3EzcTNxMABiMNBQ=="
#TV Box
    teletext:
        sequence:
          - service: script.turn_on
            data:
              entity_id: script.text
          - delay: 00:00:01
          - service: script.turn_on
            data:
              entity_id: script.one
          - service: script.turn_on
            data:
              entity_id: script.nine
          - service: script.turn_on
            data:
              entity_id: script.nine
    one:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhI2EhISEhISEhISEhISEhISEhI2EjYSNhI2EjYSNhI2EgAFTgABJkkSAAxXDQUAAAAAAAA="
    two:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhISEjYSEhISEhISEhISEhISNhISEjYSNhI2EjYSNhI2EgAFTgABJkkSAAxWDQUAAAAAAAA="
    three:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhI2EjYSEhISEhISEhISEhISEhISEjYSNhI2EjYSNhI2EgAFTwABJkkSAAxXDQUAAAAAAAA="
    four:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNxI3EjcSNxISEhISEhISEhISNxI3EhISEhISEhISNxISEhISNxISEhISEhISEhISNxI3EhISNxI3EjcSNxI3EgAFTwABJkkSAAxXDQUAAAAAAAA="
    five:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNxI3EjcSNxISEhISEhISEhISNxI3EhISEhISEhISNxI3EhISNxISEhISEhISEhISEhI3EhISNxI3EjcSNxI3EgAFTwABJkkSAAxXDQUAAAAAAAA="
    six:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhISEjYSNhISEhISEhISEhISNhISEhISNhI2EjYSNhI2EgAFTgABJkkSAAxXDQUAAAAAAAA="
    seven:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhI2EjYSNhISEhISEhISEhISEhISEhISNhI2EjYSNhI2EgAFTwABJkkSAAxXDQUAAAAAAAA="
    eight:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhISEhISEhI2EhISEhISEhISNhI2EjYSEhI2EjYSNhI2EgAFTgABJkkSAAxXDQUAAAAAAAA="
    nine:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNxI3EjcSNxISEhISEhISEhISNxI3EhISEhISEhISNxI3EhISEhI3EhISEhISEhISEhI3EjcSEhI3EjcSNxI3EgAFTwABJkkSAAxWDQUAAAAAAAA="
    zero:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhISEhISEhISEhISEhISEhISNhI2EjYSNhI2EjYSNhI2EgAFTgABJkkSAAxXDQUAAAAAAAA="
    text:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhISEjYSEhISEhISNhISEhISNhISEjYSNhI2EhISNhI2EgAFTwABJkkSAAxXDQUAAAAAAAA="
    topbox_power_toggle:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNxI3EjcSNxISEhISEhISEhISNxI3EhISEhISEhISNxISEjcSEhISEjcSEhISEhISNxISEjcSNxISEjcSNxI3EgAFTwABJkkSAAxXDQUAAAAAAAA"
    topbox_mute_toggle:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhI2EjYSNhI2EhISEhISEhISEhISEhISEhI2EjYSNhI2EgAFTgABJkkSAAxXDQUAAAAAAAA="
    topbox_play_pause_toggle:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNxI3EjcSNxISEhISEhISEhISNxI3EhISEhISEhISNxI3EhISNxISEhISNxISEhISEhI3EhISNxI3EhISNxI3EgAFTgABJkkSAAxWDQUAAAAAAAA="
    topbox_previous_channel:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNxI3EjcSNxISEhISEhISEhISNxI3EhISEhISEhISNxI3EhISEhI3EjcSEhISEhISEhI3EjcSEhISEjcSNxI3EgAFTwABJkkSAAxWDQUAAAAAAAA="
    topbox_channel_down:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpMSNhI2EjYSNhISEhISEhISEhISNhI2EhISEhISEhISNhISEjYSEhI2EjYSEhISEhISNhISEjYSEhISEjYSNhI2EgAFTwABJkkSAAxWDQUAAAAAAAA="
    topbox_channel_up:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBQAAABJpQSNxI3EjcSNxISEhISEhISEhISNxI3EhISEhISEhISNxISEhISEhISEjcSEhISEhISNxI3EjcSNxISEjcSNxI3EgAFTwABJkkSAAxWDQUAAAAAAAA="
#Stereo
    denon_on:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBEAAgZCDwIGQgZCBkIPAgZCBkIPAg8CDwIPAgZCBkIGQgABZYIGQg8CBkIGQgZCBkIPAg8CBkIGQgZCBkIPAg8CDwIAAWWDQUAAA=="
    denon_off:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBEAAgZCDwIGQgZCBkIGQg8CBkIPAg8CDwIPAgZCBkIGQgABZYIGQg8CBkIGQgZCDwIGQg8CBkIGQgZCBkIPAg8CDwIAAWWDQUAAA=="
    denon_cbl:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBEAAgZCDwIGQgZCBkIGQgZCBkIPAgZCBkIPAg8CBkIGQgABZYIGQg8CBkIGQgZCDwIPAg8CBkIPAg8CBkIGQg8CDwIAAWWDQUAAA=="
    denon_cd:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBEAAgZCDwIGQgZCBkIGQgZCDwIGQgZCBkIPAg8CBkIGQgABZYIGQg8CBkIGQgZCDwIPAgZCDwIPAg8CBkIGQg8CDwIAAWWDQUAAA=="
    denon_tv:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBEAAgZCDwIGQgZCBkIPAgZCBkIPAgZCBkIPAg8CBkIGQgABZYIGQg8CBkIGQgZCBkIPAg8CBkIPAg8CBkIGQg8CDwIAAWWDQUAAA=="
    volume_up:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBEAAgZCDwIGQgZCBkIPAgZCBkIGQg8CDwIPAg8CBkIGQgABZYIGQg8CBkIGQgZCBkIPAg8CDwIGQgZCBkIGQg8CDwIAAWWDQUAAA=="
    volume_up_10:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgpEAAgZCDwIGQgZCBkIPAgZCBkIGQg8CDwIPAg8CBkIGQgABZYIGQg8CBkIGQgZCBkIPAg8CDwIGQgZCBkIGQg8CDwIAAWWDQUAAA=="
    volume_down:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgBEAAgZCDwIGQgZCBkIGQg8CBkIGQg8CDwIPAg8CBkIGQgABZYIGQg8CBkIGQgZCDwIGQg8CDwIGQgZCBkIGQg8CDwIAAWWDQUAAA=="
    volume_down_10:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgpEAAgZCDwIGQgZCBkIGQg8CBkIGQg8CDwIPAg8CBkIGQgABZYIGQg8CBkIGQgZCDwIGQg8CDwIGQgZCBkIGQg8CDwIAAWWDQUAAA=="
    volume_down_5:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgVEAAgZCDwIGQgZCBkIGQg8CBkIGQg8CDwIPAg8CBkIGQgABZYIGQg8CBkIGQgZCDwIGQg8CDwIGQgZCBkIGQg8CDwIAAWWDQUAAA=="
    volume_up_5:
        sequence:
          - service: switch.broadlink_send_packet_192_168_10_151
            data:
              packet:
              - "JgVEAAgZCDwIGQgZCBkIPAgZCBkIGQg8CDwIPAg8CBkIGQgABZYIGQg8CBkIGQgZCBkIPAg8CDwIGQgZCBkIGQg8CDwIAAWWDQUAAA=="
    start_music:
        sequence:
          - service: script.turn_on
            data:
              entity_id: script.denon_on
          - delay: 00:00:10
          - service: script.turn_on
            data:
              entity_id: script.volume_up_5
          - delay: 00:00:02
          - service: script.turn_on
            data:
              entity_id: script.denon_cd
          - delay: 00:00:02
          - service: script.turn_on
            data:
              entity_id: script.volume_up_10
    start_television:
        sequence:
          - service: script.turn_on
            data:
              entity_id: script.topbox_power_toggle
          - delay: 00:00:02
          - service: script.turn_on
            data:
              entity_id: script.denon_on
          - delay: 00:00:02
          - service: script.turn_on
            data:
              entity_id: script.tv_power_toggle
          - delay: 00:00:10
          - service: script.turn_on
            data:
              entity_id: script.denon_cbl
          - delay: 00:00:02
          - service: script.turn_on
            data:
              entity_id: script.volume_up_10
    start_cast:
        sequence:
          - service: script.turn_on
            data:
              entity_id: script.tv_hdmi2
          - delay: 00:00:10
          - service: script.turn_on
            data:
              entity_id: script.denon_tv

#bedtime lidija
    sleep1:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.hue_color_candle_1_4
              state: on
              brightness: 122
    sleep2:
        sequence:
          - service: light.turn_off
            data:
              entity_id: light.hue_color_candle_1_4
              transition: 1800 #1800
    moodlight:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.book_shelf_color_two,light.bookshelf_color,light.living_room_window_light, light.hue_color_candle_1_2
              effect: colorloop
              brightness: 127
              transition: 5

    stop_moodlight:
        sequence:
          - service: homeassistant.turn_on
            data:
              entity_id: light.book_shelf_color_two,light.bookshelf_color,light.living_room_window_light, light.hue_color_candle_1_2
              effect: stop
          - service: homeassistant.turn_on
            data:
              entity_id: light.book_shelf_color_two,light.bookshelf_color,light.living_room_window_light, light.hue_color_candle_1_2
              brightness: 197
              hs_color: 36.706,66.667
              rgb_color: 255,189,84
              xy_color: 0.502,0.416
              transition: 5

    mood_window:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.living_room_window_light, light.hue_color_candle_1, light.hue_color_candle_1_3
              effect: colorloop
              brightness: 127
              transition: 5

    stop_mood_window:
        sequence:
          - service: homeassistant.turn_on
            data:
              entity_id: light.living_room_window_light, light.hue_color_candle_1, light.hue_color_candle_1_3
              effect: stop
          - service: homeassistant.turn_on
            data:
              entity_id: light.living_room_window_light, light.hue_color_candle_1, light.hue_color_candle_1_3
              brightness: 197
              hs_color: 36.706,66.667
              rgb_color: 255,189,84
              xy_color: 0.502,0.416
              transition: 5

    sleep:
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.sleep1
          - delay: 00:01:00
          - service: scene.turn_on
            data:
              entity_id: scene.sleep2
    skymning:
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.skymning
              
    skymning_dim_1:
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.skymning_dim_1
    skymning_dim_2:
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.skymning_dim_2
    skymning_dim_3:
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.skymning_dim_3
    skymning2:
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.skymning2
#coffe/vattenkokare off
    coffee_off:
        sequence:
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.perka
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.vattenkokare
          - service: light.turn_off
            data:
              entity_id: light.kaffe
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.coffeornot
    kaffeplugg:
        sequence:
          - service: timer.start
            data:
              entity_id: timer.timer_perka
#coffee on
    coffee_on:
        sequence:
          - service: light.turn_on
            data:
              entity_id: light.kaffe
          - service: timer.start
            data:
              entity_id: timer.timer_perka
#vattenkokare on
    vattenkokare_on:
        sequence:
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.vattenkokare
          - service: timer.start
            data:
              entity_id: timer.timer_vattenkokare
          - service: light.turn_on
            data:
              entity_id: light.kaffe
